memory = [
  0x96, 0x62, 0x53, 0x43, 0x6D, 0xF2, 0x8F, 0xBC, 0x16, 0xEE,
  0x30, 0x05, 0x78, 0x00, 0x01, 0x52, 0xEC, 0x08, 0x5F, 0x93,
  0xEA, 0xB5, 0xC0, 0x4D, 0x50, 0xF4, 0x53, 0xD8, 0xAF, 0x90,
  0x2B, 0x34, 0x81, 0x36, 0x2C, 0xAA, 0xBC, 0x0E, 0x25, 0x8B,
  0xE4, 0x8A, 0xC6, 0xA2, 0x81, 0x9F, 0x75, 0x55]

for i in range(len(memory)):
    memory[i] = hex(memory[i])[2:].rjust(2,'0') #注意不足两位要补齐
print(memory)

flag = ''
for i in range(0,len(memory),8):
    s = '0x'+memory[i+7]+memory[i+6]+memory[i+5]+memory[i+4]+memory[i+3]+memory[i+2]+memory[i+1]+memory[i]    #小端序存储
    s = int(s,16)
    print(hex(s))
    for j in range(64):
        sign = s & 1
        if sign == 1:
            s = s^0xB0004B7679FA26B3
            s = s>>1
            s |= 0x8000000000000000    #当最高位为1正向运算左移时会最高位的1会溢出，需要在逆向运算时补上
        elif sign == 0:
            s = s>>1
    # print(hex(s))
    j = 0
    while j < 8:
        flag += chr(s&0xff)
        s >>= 8
        j += 1
print(flag)







